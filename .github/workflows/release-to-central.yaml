name: Deploy New Version

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.idea/**/*'
      - '.mvn/**/*'
      - 'mvnw'
      - 'mvnw.cmd'
      - '.vscode/**/*'
      - '**/.env.example'
      - '.github/ISSUE_TEMPLATE/**/*'
      - '.github/CODEOWNERS'
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name:  deploy
    steps:
      - run: echo "Will start a Maven Central upload with version ${{ github.event.inputs.releaseversion }}"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Bump version and push tag
        id: bump
        uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'
          server-id: oss.sonatype.org
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Set projects Maven version to GitHub Action GUI set version
        run: mvn versions:set "-DnewVersion=${{ steps.bump.outputs.new_tag }}" --no-transfer-progress

      - name: Deploy to OSS Sonatype
        env:
          MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSS_SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw --batch-mode clean deploy --no-transfer-progress -P central-deploy -P coverage org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=jemberai_jember-cryptography

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.3.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            Grab the new version from Maven central https://repo1.maven.org/maven2/org/jemberai/jember-cryptography/${{ github.event.inputs.releaseversion }} by using it in your deps.

            ```
            <dependencies>
            	<dependency>
            	    <groupId>org.jemberai</groupId>
            	    <artifactId>jember-cryptography</artifactId>
            	    <version>${{ steps.bump.outputs.new_tag }}</version>
            	</dependency>
            </dependencies>
            ```

            ### Things that changed in this release
            ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.bump.outputs.new_tag }}
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action - Jember Cryptography Release: ${{ steps.bump.outputs.new_tag }}\n Job Status: ${{ job.status }}\n <https://github.com/jemberai/jember-cryptography/releases/tag/${{ steps.bump.outputs.new_tag }}| Release Information> \n ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CICD_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK